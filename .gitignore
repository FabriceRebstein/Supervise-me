import streamlit as st

st.set_page_config(page_title= "Supervise Me",
                   page_icon= ':bar_chart')


def intro():
    import streamlit as st

    st.write("# Welcome to SuperviseMe")
    st.sidebar.success("Select a function.")

    st.markdown(
        """
        Supervise me is a match maker between students and supervisors for the university of St-Gallen

        Welcome to Supervise Me, the innovative platform designed to seamlessly connect students with the ideal teachers for their bachelor or master thesis supervision. Our app streamlines the matching process by carefully considering each teacher's area of expertise and preferred subjects to ensure that every student receives personalized guidance tailored to their academic needs. Whether you are embarking on your final thesis project or looking for expert insights to shape your research, Supervise Me is here to facilitate these crucial academic partnerships, paving the way for successful scholarly achievements.

        -->Select a function to start!<--
        

       
    """
    )
def Statistics_of_teachers_demo():
    import streamlit as st
    import pandas as pd
    
    st.markdown(f"# {list(page_names_to_funcs.keys())[1]}")


    df = pd.read_excel(r"/Users/thomassabti/Desktop/my_product.xlsx")
   
# Group by 'Teacher' and 'Subject' and count occurrences
    subject_data = df.groupby(['Teacher', 'Subjects']).size().reset_index(name='Count')
# Group by 'Teacher' and 'Area of Expertise' and count occurrences
    expertise_data = df.groupby(['Teacher', 'Area of expertise']).size().reset_index(name='Count')
# Allow selection of a specific teacher to display details
    teacher_selection = st.selectbox("Choose a teacher to filter:", df['Teacher'].unique())
    st.subheader(f"Details for {teacher_selection}")
    filtered_subject_data = subject_data[subject_data['Teacher'] == teacher_selection]
    st.write(filtered_subject_data)
    filtered_expertise_data = expertise_data[expertise_data['Teacher'] == teacher_selection]
    st.write(filtered_expertise_data)

 
    st.header('Subjects Graph')
# Display a bar chart for subjects
    subject_pivot = filtered_subject_data.pivot(index='Subjects', columns='Count', values='Count')
    st.bar_chart(subject_pivot)

    st.header(' Area of expertise Graph')
# Display a bar chart for area of expertise
    expertise_pivot = filtered_expertise_data.pivot(index='Area of expertise', columns='Count', values='Count')
    st.bar_chart(expertise_pivot)

page_names_to_funcs = {
    "Welcome Page": intro,
    "Statistics of Teacher": Statistics_of_teachers_demo,
}
import streamlit as st
demo_name = st.sidebar.selectbox("How can we help you?", page_names_to_funcs.keys())
page_names_to_funcs[demo_name]()
